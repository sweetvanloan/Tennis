import pygame
import random

# Constants for colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

# Initialize pygame
pygame.init()

# Set up display
WIDTH, HEIGHT = 800, 600
win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Tennis Game")

# Load sprite images
player_image = pygame.image.load("player.png")
opponent_image = pygame.image.load("opponent.png")
ball_image = pygame.image.load("ball.png")

# Load sound effects
hit_sound = pygame.mixer.Sound("hit.wav")
score_sound = pygame.mixer.Sound("score.wav")

# Define game elements
ball = pygame.Rect(WIDTH // 2 - 15, HEIGHT // 2 - 15, 30, 30)
player = pygame.Rect(WIDTH - 20, HEIGHT // 2 - 70, 10, 140)
opponent = pygame.Rect(10, HEIGHT // 2 - 70, 10, 140)

# Initialize game variables
ball_speed_x = 7 * random.choice((1, -1))
ball_speed_y = 7 * random.choice((1, -1))
player_speed = 0
opponent_speed = 7

# Set up clock
clock = pygame.time.Clock()

# Function to handle player input
def handle_input():
    nonlocal player_speed
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()

    keys = pygame.key.get_pressed()
    if keys[pygame.K_UP]:
        player_speed = -7
    elif keys[pygame.K_DOWN]:
        player_speed = 7
    else:
        player_speed = 0

# Function to update game elements
def update_game_elements():
    nonlocal ball_speed_x, ball_speed_y

    ball.x += ball_speed_x
    ball.y += ball_speed_y
    player.y += player_speed

    # Ball collision with walls
    if ball.top <= 0 or ball.bottom >= HEIGHT:
        ball_speed_y *= -1

    # Ball collision with players
    if ball.colliderect(player) or ball.colliderect(opponent):
        ball_speed_x *= -1
        hit_sound.play()

    # Opponent AI
    if opponent.top < ball.y:
        opponent.top += opponent_speed
    if opponent.bottom > ball.y:
        opponent.bottom -= opponent_speed

# Function to draw game elements
def draw_game_elements():
    win.fill(BLACK)
    win.blit(player_image, player)
    win.blit(opponent_image, opponent)
    win.blit(ball_image, ball)
    pygame.draw.aaline(win, YELLOW, (WIDTH // 2, 0), (WIDTH // 2, HEIGHT))

# Main game loop
while True:
    handle_input()
    update_game_elements()
    draw_game_elements()

    pygame.display.flip()
    clock.tick(60)

# Quit pygame
pygame.quit()
